#- type: entity
#  save: false
#  name: Base felinid
#  parent: BaseMobHuman
#  id: MobFelinidBase
#  abstract: true
#  components:
#  - type: Sprite
#    netsync: false
#    noRot: true
#    drawdepth: Mobs
#    scale: 0.8, 0.8
#    layers:
#      - map: [ "enum.HumanoidVisualLayers.Chest" ]
#      - map: [ "enum.HumanoidVisualLayers.Head" ]
#      - map: [ "enum.HumanoidVisualLayers.Snout" ]
#      - map: [ "enum.HumanoidVisualLayers.Eyes" ]
#      - map: [ "enum.HumanoidVisualLayers.RArm" ]
#      - map: [ "enum.HumanoidVisualLayers.LArm" ]
#      - map: [ "enum.HumanoidVisualLayers.RLeg" ]
#      - map: [ "enum.HumanoidVisualLayers.LLeg" ]
#      - shader: StencilClear
#        sprite: Mobs/Species/Human/parts.rsi #PJB on stencil clear being on the left leg: "...this is 'fine'" -https://github.com/space-wizards/space-station-14/pull/12217#issuecomment-1291677115
#        # its fine, but its still very stupid that it has to be done like this instead of allowing sprites to just directly insert a stencil clear.
#        # sprite refactor when
#        state: l_leg
#      - shader: StencilMask
#        map: ["enum.HumanoidVisualLayers.StencilMask"]
#        sprite: Mobs/Customization/masking_helpers.rsi
#        state: unisex_full
#        visible: false
#      - map: [ "underwearb" ] #Sirena
#      - map: [ "underweart" ] #Sirena
#      - map: [ "enum.HumanoidVisualLayers.LFoot" ]
#      - map: [ "enum.HumanoidVisualLayers.RFoot" ]
#      - map: [ "socks" ] #Sirena
#      - map: [ "jumpsuit" ]
#      - map: [ "enum.HumanoidVisualLayers.LHand" ]
#      - map: [ "enum.HumanoidVisualLayers.RHand" ]
#      - map: [ "id" ]
#      - map: [ "gloves" ]
#      - map: [ "shoes" ]
#      - map: [ "ears" ]
#      - map: [ "outerClothing" ]
#      - map: [ "eyes" ]
#      - map: [ "belt" ]
#      - map: [ "neck" ]
#      - map: [ "back" ]
#      - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
#      - map: [ "enum.HumanoidVisualLayers.Hair" ]
#      - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
#      - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
#      - map: [ "enum.HumanoidVisualLayers.Tail" ]
#      - map: [ "mask" ]
#      - map: [ "head" ]
#      - map: [ "pocket1" ]
#      - map: [ "pocket2" ]
#      - map: ["enum.HumanoidVisualLayers.Handcuffs"]
#        color: "#ffffff"
#        sprite: Objects/Misc/handcuffs.rsi
#        state: body-overlay-2
#        visible: false
#      - map: [ "clownedon" ] # Dynamically generated
#        sprite: "Effects/creampie.rsi"
#        state: "creampie_human"
#        visible: false
#  - type: HumanoidAppearance
#    species: Felinid
#  - type: Fixtures
#    fixtures: # TODO: This needs a second fixture just for mob collisions.
#      fix1:
#        shape:
#          !type:PhysShapeCircle
#          radius: 0.28
#        density: 140
#        restitution: 0.0
#        mask:
#        - MobMask
#        layer:
#        - MobLayer
#  - type: Body
#    prototype: Felinid
#  - type: Damageable
#    damageContainer: Biological
#    damageModifierSet: Felinid
#  - type: MeleeWeapon
#    soundHit:
#      collection: Punch
#    animation: WeaponArcClaw
#    damage:
#      types:
#        Blunt: 1
#        Slash: 5
#  - type: Thieving
#    stealthy: true
#    stripTimeReduction: 1
#  - type: Speech
#    speechSounds: Alto
#  - type: DamageOnHighSpeedImpact
#    damage:
#      types:
#        Blunt: 1
#    soundHit:
#      path: /Audio/Effects/hit_kick.ogg
#  - type: Stamina
#    excess: 85
#  - type: Perishable

#- type: entity
#  save: false
#  name: Felinid Dummy
#  parent: MobHumanDummy
#  id: MobFelinidDummy
#  noSpawn: true
#  description: A dummy felinid meant to be used in character setup.
#  components:
#  - type: Sprite
#    netsync: false
#    noRot: true
#    drawdepth: Mobs
#    scale: 1, 1
#    layers:
#      # TODO BODY Turn these into individual body parts?
#        - map: [ "enum.HumanoidVisualLayers.Chest" ]
#        - map: [ "enum.HumanoidVisualLayers.Head" ]
#        - map: [ "enum.HumanoidVisualLayers.Snout" ]
#        - map: [ "enum.HumanoidVisualLayers.Eyes" ]
#        - map: [ "enum.HumanoidVisualLayers.RArm" ]
#        - map: [ "enum.HumanoidVisualLayers.LArm" ]
#        - map: [ "enum.HumanoidVisualLayers.RLeg" ]
#        - map: [ "enum.HumanoidVisualLayers.LLeg" ]
#        - shader: StencilClear
#          sprite: Mobs/Species/Human/parts.rsi
#          state: l_leg
#        - shader: StencilMask
#          map: ["enum.HumanoidVisualLayers.StencilMask"]
#          sprite: Mobs/Customization/masking_helpers.rsi
#          state: unisex_full
#          visible: false
#        - map: [ "underwearb" ] #Sirena
#        - map: [ "underweart" ] #Sirena
#        - map: [ "enum.HumanoidVisualLayers.LFoot" ]
#        - map: [ "enum.HumanoidVisualLayers.RFoot" ]
#        - map: [ "socks" ] #Sirena
#        - map: [ "jumpsuit" ]
#        - map: [ "enum.HumanoidVisualLayers.LHand" ]
#        - map: [ "enum.HumanoidVisualLayers.RHand" ]
#        - map: [ "enum.HumanoidVisualLayers.Handcuffs" ]
#          color: "#ffffff"
#          sprite: Objects/Misc/handcuffs.rsi
#          state: body-overlay-2
#          visible: false
#        - map: [ "id" ]
#        - map: [ "gloves" ]
#        - map: [ "shoes" ]
#        - map: [ "ears" ]
#        - map: [ "outerClothing" ]
#        - map: [ "eyes" ]
#        - map: [ "belt" ]
#        - map: [ "neck" ]
#        - map: [ "back" ]
#        - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
#        - map: [ "enum.HumanoidVisualLayers.Hair" ]
#        - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
#        - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
#        - map: [ "enum.HumanoidVisualLayers.Tail" ]
#        - map: [ "mask" ]
#        - map: [ "head" ]
#        - map: [ "pocket1" ]
#        - map: [ "pocket2" ]

##Nya~~
